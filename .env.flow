
///Cutted code on 7 Feb
else if(level == 2 && textArray[1] == 1){
          response = `CON Enter the invite code for the group you want to join`;
          return response;
        }if(level == 3){
          // Find the group with the invite code
          let group = await Savings.findOne({ InviteCode: textArray[2] });
          if (!group) {
            response = "END Group not found. Please check the invite code and try again.";
            return response;
          }
      
          // Check if the user is already a member of the group
          const member = await Savings.findOneAndUpdate({ InviteCode: textArray[3] }, {
            $push: { GroupMembers: {MemberPhoneNumber: textArray[4] } }
          }, { new: true });
          if (member) {
            response = "END You are already a member of this group.";
            return response;
          }
      
        
          // Join the group
          group.GroupMembers.push({ MemberPhoneNumber: phoneNumber });
          await group.save();
          response = `END You have successfully joined the ${group.GroupName} group.`;
        }



        if(level == 2 && textArray[1] == 2){
          response = `CON Enter your fullname`;
          return response;
        }if(level == 3 ){
          response = `CON The Government type can be 
                      Admin 
                      Multi-Admin 
                      1 vote per person 
                      1 vote per $ deposit\n
                      Enter Gov type,from the list above
                    `;
          return response;
        }if(level == 4 ){
          response = `CON Enter new group name`;
          return response;
        }if(level == 5 ){
          response = `CON Enter the group savings goal`;
          return response;
        }if(level == 6 ){
          response = `CON Enter group invite code`;
          return response;
        }if(level == 7 ){
          response = `CON What is the grace period for repaying a loan`;
          return response;
        }if(level == 8) {
          // proceed to register user
          async function createGroup() {
            const SavingsData = {
              Admin : {
              number: phoneNumber,
             Creator: textArray[2],
             GovType: textArray[3], 
             GroupName: textArray[4], 
             SavingsGoal: textArray[5],
             InviteCode: textArray[6],
             GracePeriod: textArray[7]
            }
            };
    
    
            // create user and register to DB
            let Member = await Savings.create(SavingsData);
            return Member;
          }
    
          // Assigns the created user to a variable for manipulation
          let Member = await createGroup();
          // If user creation failed
          if (!Member) {
            response = "END An unexpected error occurred... Please try again later";
          }
          // if user creation was successful
          else {
            let owner =Member.Creator;
            let code = Member.InviteCode;
            
        // Call the sendSMS function after successful registration
            // sendSMS2(phoneNumber, "Congratulations! You have successfully registered with Pollen.");
            response = `END Congratulations ${owner}, You have successfully registered the group. Your group invite code is ${code} .`;
          }
        }
        
        
///Working code  for creating a group


if(level == 2 && textArray[1] == 2){
          response = `CON Enter your fullname`;
          return response;
        }if(level == 3 ){
          response = `CON The Government type can be 
                      Admin 
                      Multi-Admin 
                      1 vote per person 
                      1 vote per $ deposit\n
                      Enter Gov type,from the list above
                    `;
          return response;
        }if(level == 4 ){
          response = `CON Enter new group name`;
          return response;
        }if(level == 5 ){
          response = `CON Enter the group savings goal`;
          return response;
        }if(level == 6 ){
          response = `CON Enter group invite code`;
          return response;
        }if(level == 7 ){
          response = `CON What is the grace period for repaying a loan`;
          return response;
        }if(level == 8) {
          // proceed to register user
          async function createGroup() {
            const SavingsData = {
              
              number: phoneNumber,
             Creator: textArray[2],
             GovType: textArray[3], 
             GroupName: textArray[4], 
             SavingsGoal: textArray[5],
             InviteCode: textArray[6],
             GracePeriod: textArray[7]
             
            };
    
    
            // create user and register to DB
            let Member = await Savings.create(SavingsData);
            return Member;
          }
    
          // Assigns the created user to a variable for manipulation
          let Member = await createGroup();
          // If user creation failed
          if (!Member) {
            response = "END An unexpected error occurred... Please try again later";
          }
          // if user creation was successful
          else {
            let owner =Member.Creator;
            let code = Member.InviteCode;
            
        // Call the sendSMS function after successful registration
            // sendSMS2(phoneNumber, "Congratulations! You have successfully registered with Pollen.");
            response = `END Congratulations ${owner}, You have successfully registered the group. Your group invite code is ${code} .`;
          }
        }




        ///Working code  for joining a group


        if(level == 2 && textArray[1] == 1){
            response = `CON Enter Your Name`;
            return response;
          }if(level == 3){
            response = `CON Enter the name of your province`;
            return response;
          }if(level == 4){
            response = `CON Enter the invite code for the group you want to join`;
            return response;
          }if(level == 5){
            // Find the group with the invite code
            let group = await Savings.findOne({ InviteCode: textArray[4]});
            if (!group) {
              response = "END Group not found. Please check the invite code and try again.";
              return response;
            }else if(group){
              response = `CON Please confirm the circle before joining.
                          GovType: ${group.GovType}
                          CircleName: ${group.GroupName}
                          Deposit goal per mo: ${group.SavingsGoal}
                          Late penalty: ${group.GracePeriod}
                          
                          1.Confirm & Join
                          2.Cancel
              `;
              return response;
            }
          }if(level == 6 && textArray[5]==1){
            let group = await Savings.findOne({ InviteCode: textArray[4]});

            // Check if the user is already a member of the group
            const member = await Savings.findOneAndUpdate({MemberName:textArray[2],Province:textArray[3],InviteCode: textArray[5]}, {
              $push: { GroupMembers: {MemberName:textArray[2],Province:textArray[3],MemberPhoneNumber: textArray[4] } }
            }, { new: true });
            if (member) {
              response = "END You are already a member of this circle.";
              return response;
            }
        
          
            // Join the group
            group.GroupMembers.push({MemberName:textArray[2],Province:textArray[3],MemberPhoneNumber: phoneNumber });
            await group.save();
            response = `END You have successfully joined the ${group.GroupName} circle.`;
          }else if(level == 6 && textArray[5]==2){
            response = `END Sorry, you can't join the group.You have cancelled the process`;
            return response;
          }
          return response;